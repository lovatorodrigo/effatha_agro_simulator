// android/settings.gradle — compatível com AGP 8.6 e Flutter moderno

rootProject.name = "android"

pluginManagement {
    // Resolve caminho do Flutter SDK
    def flutterSdkPath
    def props = new Properties()
    def propsFile = new File(settingsDir, "local.properties")
    if (propsFile.exists()) {
        propsFile.withInputStream { props.load(it) }
        flutterSdkPath = props.getProperty("flutter.sdk")
    }
    if (flutterSdkPath == null || flutterSdkPath.trim().isEmpty()) {
        // Fallback para ambiente do Codemagic / local
        flutterSdkPath = System.getenv("FLUTTER_HOME")
        if (flutterSdkPath == null || flutterSdkPath.trim().isEmpty()) {
            flutterSdkPath = System.getenv("FLUTTER_ROOT")
        }
    }
    if (flutterSdkPath == null || flutterSdkPath.trim().isEmpty()) {
        throw new GradleException(
            "Flutter SDK path not found. Set 'flutter.sdk' in android/local.properties " +
            "or define FLUTTER_HOME/FLUTTER_ROOT no ambiente."
        )
    }

    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()
        // Repositório do plugin do Flutter (obrigatório)
        maven { url "${flutterSdkPath}/packages/flutter_tools/gradle" }
    }

    // Versões dos plugins (AGP/Kotlin). O plugin do Flutter é resolvido via repositório acima.
    plugins {
        id("com.android.application") version "8.6.0" apply false
        id("com.android.library") version "8.6.0" apply false
        id("org.jetbrains.kotlin.android") version "1.9.24" apply false
        // NÃO declare 'dev.flutter.flutter-gradle-plugin' aqui (ele é resolvido via maven do Flutter)
    }
}

// Centraliza repositórios para evitar o erro “prefer settings repositories”
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        google()
        mavenCentral()
        // adicione outros se realmente precisar, ex.: maven { url "https://jitpack.io" }
    }
}

include(":app")
