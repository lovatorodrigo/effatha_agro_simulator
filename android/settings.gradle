// settings.gradle — Gradle 8.x + AGP 8.6.x + Flutter

pluginManagement {
    // Descobre o caminho do Flutter sem depender de local.properties
    def flutterSdkPath = System.getenv("FLUTTER_ROOT")
    if (flutterSdkPath == null || flutterSdkPath.trim().isEmpty()) {
        // fallback para local.properties (opcional)
        def props = new Properties()
        def lp = new File(rootDir, "local.properties")
        if (lp.exists()) {
            lp.withInputStream { props.load(it) }
            flutterSdkPath = props.getProperty("flutter.sdk")
        }
    }
    if (flutterSdkPath == null || flutterSdkPath.trim().isEmpty()) {
        throw new GradleException("Flutter SDK não encontrado. Defina FLUTTER_ROOT no ambiente ou 'flutter.sdk' em local.properties.")
    }

    // Disponibiliza o plugin 'dev.flutter.flutter-gradle-plugin'
    includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")

    repositories {
        // Repositórios para plugins (AGP, Kotlin, etc.)
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

// IMPORTANTE: esse bloco deve vir depois do pluginManagement
@file:Suppress("UnstableApiUsage")
dependencyResolutionManagement {
    // Usar os repositórios definidos AQUI
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        google()
        mavenCentral()
        // Artefatos do engine do Flutter (AARs como x86_64_debug, etc.)
        maven { url = uri("https://storage.googleapis.com/download.flutter.io") }
    }
}

rootProject.name = "android"
include(":app")
